{"version":3,"file":"static/js/async/docs_zh_plugin_system_write-a-plugin_mdx.2a9bf7dc.js","sources":["./docs/zh/plugin/system/write-a-plugin.mdx"],"sourcesContent":["globalThis.__RSPRESS_PAGE_META ||= {};\nglobalThis.__RSPRESS_PAGE_META[\"zh%2Fplugin%2Fsystem%2Fwrite-a-plugin.mdx\"] = {\"toc\":[{\"id\":\"1-定义插件\",\"text\":\"1. 定义插件\",\"depth\":3},{\"id\":\"2-使用插件\",\"text\":\"2. 使用插件\",\"depth\":3}],\"title\":\"编写一个插件\",\"frontmatter\":{}};\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    a: \"a\",\n    p: \"p\",\n    div: \"div\",\n    code: \"code\",\n    h3: \"h3\",\n    pre: \"pre\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsxs(_components.h1, {\n      id: \"编写一个插件\",\n      children: [_jsx(_components.a, {\n        className: \"header-anchor\",\n        \"aria-hidden\": \"true\",\n        href: \"#编写一个插件\",\n        children: \"#\"\n      }), \"编写一个插件\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"我们以注入一个全局组件为例，来看看如何定义和使用插件。\"\n    }), \"\\n\", _jsxs(_components.div, {\n      className: \"modern-directive tip\",\n      children: [_jsx(_components.div, {\n        className: \"modern-directive-title\",\n        children: \"提示\"\n      }), _jsx(_components.div, {\n        className: \"modern-directive-content\",\n        children: _jsxs(_components.p, {\n          children: [\"\\n为了获得更好的类型提示，你可以在项目中安装 \", _jsx(_components.code, {\n            children: \"@rspress/shared\"\n          }), \"，然后通过 \", _jsx(_components.code, {\n            children: \"import { RspressPlugin } from '@rspress/shared'\"\n          }), \" 来引入 \", _jsx(_components.code, {\n            children: \"RspressPlugin\"\n          }), \"类型。\"]\n        })\n      })]\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"1-定义插件\",\n      children: [_jsx(_components.a, {\n        className: \"header-anchor\",\n        \"aria-hidden\": \"true\",\n        href: \"#1-定义插件\",\n        children: \"#\"\n      }), \"1. 定义插件\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        meta: \"title=\\\"plugin.ts\\\"\",\n        children: \"import { RspressPlugin } from '@rspress/shared';\\n\\nexport function pluginExample(slug: string): RspressPlugin {\\n  // 组件路径，组件的内容你需要自己实现\\n  const componentPath = path.join(__dirname, 'Example.tsx');\\n  return {\\n    // 插件名称\\n    name: 'plugin-example',\\n    // 全局组件的路径\\n    globalUIComponents: [componentPath],\\n    // 构建阶段的全局变量定义\\n    builderConfig: {\\n      source: {\\n        define: {\\n          'process.env.slug': JSON.stringify(slug),\\n        },\\n      },\\n    },\\n  };\\n}\\n\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        meta: \"title=\\\"Example.tsx\\\"\",\n        children: \"import React from 'react';\\n\\nconst Example = () => {\\n  console.log(process.env.SLUG);\\n  return <div>Example</div>;\\n};\\n\\nexport default Example;\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"插件一般为一个函数，接收一些插件参数(可选)，返回一个对象，对象中包含插件的名称以及其它配置。在上面的例子中，我们定义了一个插件，它的名称为\", _jsx(_components.code, {\n        children: \"plugin-example\"\n      }), \"，它会在构建阶段定义一个全局变量\", _jsx(_components.code, {\n        children: \"slug\"\n      }), \"，并且在文档中注入一个全局组件\", _jsx(_components.code, {\n        children: \"Example.tsx\"\n      }), \"。\"]\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"2-使用插件\",\n      children: [_jsx(_components.a, {\n        className: \"header-anchor\",\n        \"aria-hidden\": \"true\",\n        href: \"#2-使用插件\",\n        children: \"#\"\n      }), \"2. 使用插件\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"在 \", _jsx(_components.code, {\n        children: \"rspress.config.ts\"\n      }), \" 中通过 \", _jsx(_components.code, {\n        children: \"plugins\"\n      }), \" 注册插件:\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        meta: \"title=\\\"rspress.config.ts\\\"\",\n        children: \"import { pluginExample } from './plugin';\\n\\nexport default {\\n  plugins: [pluginExample('test')],\\n};\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"这样，Example 组件会自动在页面中渲染，并且我们可以在 Example 组件中访问到\", _jsx(_components.code, {\n        children: \"process.env.slug\"\n      }), \"。\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","a","p","div","code","h3","pre","components","children","id","className","href","meta","globalThis","__RSPRESS_PAGE_META","MDXLayout","wrapper"],"mappings":"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"}