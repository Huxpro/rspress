(self.webpackChunk_rspress_docs=self.webpackChunk_rspress_docs||[]).push([["docs_zh_plugin_system_write-a-plugin_mdx"],{16181:function(e,n,s){"use strict";s.r(n),s.d(n,{default:function(){return d}});var r,i=s("66791"),l=s("190");function c(e){var n=Object.assign({h1:"h1",a:"a",p:"p",div:"div",code:"code",h3:"h3",pre:"pre"},(0,l.useMDXComponents)(),e.components);return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.h1,{id:"编写一个插件",children:[(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#编写一个插件",children:"#"}),"编写一个插件"]}),"\n",(0,i.jsx)(n.p,{children:"我们以注入一个全局组件为例，来看看如何定义和使用插件。"}),"\n",(0,i.jsxs)(n.div,{className:"modern-directive tip",children:[(0,i.jsx)(n.div,{className:"modern-directive-title",children:"提示"}),(0,i.jsx)(n.div,{className:"modern-directive-content",children:(0,i.jsxs)(n.p,{children:["\n为了获得更好的类型提示，你可以在项目中安装 ",(0,i.jsx)(n.code,{children:"@rspress/shared"}),"，然后通过 ",(0,i.jsx)(n.code,{children:"import { RspressPlugin } from '@rspress/shared'"})," 来引入 ",(0,i.jsx)(n.code,{children:"RspressPlugin"}),"类型。"]})})]}),"\n",(0,i.jsxs)(n.h3,{id:"1-定义插件",children:[(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#1-定义插件",children:"#"}),"1. 定义插件"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",meta:'title="plugin.ts"',children:"import { RspressPlugin } from '@rspress/shared';\n\nexport function pluginExample(slug: string): RspressPlugin {\n  // 组件路径，组件的内容你需要自己实现\n  const componentPath = path.join(__dirname, 'Example.tsx');\n  return {\n    // 插件名称\n    name: 'plugin-example',\n    // 全局组件的路径\n    globalUIComponents: [componentPath],\n    // 构建阶段的全局变量定义\n    builderConfig: {\n      source: {\n        define: {\n          'process.env.slug': JSON.stringify(slug),\n        },\n      },\n    },\n  };\n}\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",meta:'title="Example.tsx"',children:"import React from 'react';\n\nconst Example = () => {\n  console.log(process.env.SLUG);\n  return <div>Example</div>;\n};\n\nexport default Example;\n"})}),"\n",(0,i.jsxs)(n.p,{children:["插件一般为一个函数，接收一些插件参数(可选)，返回一个对象，对象中包含插件的名称以及其它配置。在上面的例子中，我们定义了一个插件，它的名称为",(0,i.jsx)(n.code,{children:"plugin-example"}),"，它会在构建阶段定义一个全局变量",(0,i.jsx)(n.code,{children:"slug"}),"，并且在文档中注入一个全局组件",(0,i.jsx)(n.code,{children:"Example.tsx"}),"。"]}),"\n",(0,i.jsxs)(n.h3,{id:"2-使用插件",children:[(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#2-使用插件",children:"#"}),"2. 使用插件"]}),"\n",(0,i.jsxs)(n.p,{children:["在 ",(0,i.jsx)(n.code,{children:"rspress.config.ts"})," 中通过 ",(0,i.jsx)(n.code,{children:"plugins"})," 注册插件:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",meta:'title="rspress.config.ts"',children:"import { pluginExample } from './plugin';\n\nexport default {\n  plugins: [pluginExample('test')],\n};\n"})}),"\n",(0,i.jsxs)(n.p,{children:["这样，Example 组件会自动在页面中渲染，并且我们可以在 Example 组件中访问到",(0,i.jsx)(n.code,{children:"process.env.slug"}),"。"]})]})}(r=globalThis).__RSPRESS_PAGE_META||(r.__RSPRESS_PAGE_META={}),globalThis.__RSPRESS_PAGE_META["zh%2Fplugin%2Fsystem%2Fwrite-a-plugin.mdx"]={toc:[{id:"1-定义插件",text:"1. 定义插件",depth:3},{id:"2-使用插件",text:"2. 使用插件",depth:3}],title:"编写一个插件",frontmatter:{}};var d=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=Object.assign({},(0,l.useMDXComponents)(),e.components).wrapper;return n?(0,i.jsx)(n,Object.assign({},e,{children:(0,i.jsx)(c,e)})):c(e)}}}]);